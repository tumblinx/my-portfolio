{"ast":null,"code":"import React,{useState}from'react';import'./App.css';import'./Contact.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Contact(){const[formData,setFormData]=useState({name:'',email:'',message:''});// Update form data as user types\nfunction handleChange(e){const{name,value}=e.target;setFormData(prevState=>({...prevState,[name]:value}));};// Handle form submission\nfunction handleSubmit(e){e.preventDefault();// Simple validation to ensure fields are not empty\nif(!formData.name||!formData.email||!formData.message){alert('Please fill in all fields.');return;}console.log('Form Data Submitted:',formData);// Reset form fields\nsetFormData({name:'',email:'',message:''});// Add here your logic to send data to a server or email service\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"content-box\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Reach out!\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Name:\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",name:\"name\",value:formData.name,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email:\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",name:\"email\",value:formData.email,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"message\",className:true,children:\"Message:\"}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"textarea\",{id:\"message\",name:\"message\",value:formData.message,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Send Message\"})]})]});}export default Contact;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Contact","formData","setFormData","name","email","message","handleChange","e","value","target","prevState","handleSubmit","preventDefault","alert","console","log","className","children","onSubmit","htmlFor","type","id","onChange","required"],"sources":["/home/carum/CompSci/Rando/portfolio/my-portfolio/src/Contact.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport './Contact.css';\n\nfunction Contact() {\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        message: ''\n    });\n\n    // Update form data as user types\n    function handleChange(e) {\n        const { name, value } = e.target;\n        setFormData(prevState => ({\n            ...prevState,\n            [name]: value\n        }));\n    };\n\n    // Handle form submission\n    function handleSubmit (e) {\n        e.preventDefault();\n        // Simple validation to ensure fields are not empty\n        if (!formData.name || !formData.email || !formData.message) {\n            alert('Please fill in all fields.');\n            return;\n        }\n        console.log('Form Data Submitted:', formData);\n        // Reset form fields\n        setFormData({\n            name: '',\n            email: '',\n            message: ''\n        });\n        // Add here your logic to send data to a server or email service\n    };\n\n    return (\n        <div className=\"content-box\">\n            <h2>Reach out!</h2>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor=\"name\">Name:</label><br />\n                    <input\n                        type=\"text\"\n                        id=\"name\"\n                        name=\"name\"\n                        value={formData.name}\n                        onChange={handleChange}\n                        required\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"email\">Email:</label><br />\n                    <input\n                        type=\"email\"\n                        id=\"email\"\n                        name=\"email\"\n                        value={formData.email}\n                        onChange={handleChange}\n                        required\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"message\" className>Message:</label> <br />\n                    <textarea\n                        id=\"message\"\n                        name=\"message\"\n                        value={formData.message}\n                        onChange={handleChange}\n                        required\n                    />\n                </div>\n                <button type=\"submit\">Send Message</button>\n            </form>\n        </div>\n    );\n}\n\nexport default Contact;\n\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,WAAW,CAClB,MAAO,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEvB,QAAS,CAAAC,OAAOA,CAAA,CAAG,CACf,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGP,QAAQ,CAAC,CACrCQ,IAAI,CAAE,EAAE,CACRC,KAAK,CAAE,EAAE,CACTC,OAAO,CAAE,EACb,CAAC,CAAC,CAEF;AACA,QAAS,CAAAC,YAAYA,CAACC,CAAC,CAAE,CACrB,KAAM,CAAEJ,IAAI,CAAEK,KAAM,CAAC,CAAGD,CAAC,CAACE,MAAM,CAChCP,WAAW,CAACQ,SAAS,GAAK,CACtB,GAAGA,SAAS,CACZ,CAACP,IAAI,EAAGK,KACZ,CAAC,CAAC,CAAC,CACP,CAAC,CAED;AACA,QAAS,CAAAG,YAAYA,CAAEJ,CAAC,CAAE,CACtBA,CAAC,CAACK,cAAc,CAAC,CAAC,CAClB;AACA,GAAI,CAACX,QAAQ,CAACE,IAAI,EAAI,CAACF,QAAQ,CAACG,KAAK,EAAI,CAACH,QAAQ,CAACI,OAAO,CAAE,CACxDQ,KAAK,CAAC,4BAA4B,CAAC,CACnC,OACJ,CACAC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAEd,QAAQ,CAAC,CAC7C;AACAC,WAAW,CAAC,CACRC,IAAI,CAAE,EAAE,CACRC,KAAK,CAAE,EAAE,CACTC,OAAO,CAAE,EACb,CAAC,CAAC,CACF;AACJ,CAAC,CAED,mBACIN,KAAA,QAAKiB,SAAS,CAAC,aAAa,CAAAC,QAAA,eACxBpB,IAAA,OAAAoB,QAAA,CAAI,YAAU,CAAI,CAAC,cACnBlB,KAAA,SAAMmB,QAAQ,CAAEP,YAAa,CAAAM,QAAA,eACzBlB,KAAA,QAAAkB,QAAA,eACIpB,IAAA,UAAOsB,OAAO,CAAC,MAAM,CAAAF,QAAA,CAAC,OAAK,CAAO,CAAC,cAAApB,IAAA,QAAK,CAAC,cACzCA,IAAA,UACIuB,IAAI,CAAC,MAAM,CACXC,EAAE,CAAC,MAAM,CACTlB,IAAI,CAAC,MAAM,CACXK,KAAK,CAAEP,QAAQ,CAACE,IAAK,CACrBmB,QAAQ,CAAEhB,YAAa,CACvBiB,QAAQ,MACX,CAAC,EACD,CAAC,cACNxB,KAAA,QAAAkB,QAAA,eACIpB,IAAA,UAAOsB,OAAO,CAAC,OAAO,CAAAF,QAAA,CAAC,QAAM,CAAO,CAAC,cAAApB,IAAA,QAAK,CAAC,cAC3CA,IAAA,UACIuB,IAAI,CAAC,OAAO,CACZC,EAAE,CAAC,OAAO,CACVlB,IAAI,CAAC,OAAO,CACZK,KAAK,CAAEP,QAAQ,CAACG,KAAM,CACtBkB,QAAQ,CAAEhB,YAAa,CACvBiB,QAAQ,MACX,CAAC,EACD,CAAC,cACNxB,KAAA,QAAAkB,QAAA,eACIpB,IAAA,UAAOsB,OAAO,CAAC,SAAS,CAACH,SAAS,MAAAC,QAAA,CAAC,UAAQ,CAAO,CAAC,IAAC,cAAApB,IAAA,QAAK,CAAC,cAC1DA,IAAA,aACIwB,EAAE,CAAC,SAAS,CACZlB,IAAI,CAAC,SAAS,CACdK,KAAK,CAAEP,QAAQ,CAACI,OAAQ,CACxBiB,QAAQ,CAAEhB,YAAa,CACvBiB,QAAQ,MACX,CAAC,EACD,CAAC,cACN1B,IAAA,WAAQuB,IAAI,CAAC,QAAQ,CAAAH,QAAA,CAAC,cAAY,CAAQ,CAAC,EACzC,CAAC,EACN,CAAC,CAEd,CAEA,cAAe,CAAAjB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}